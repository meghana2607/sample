name: Semgrep Analysis

on: [push, pull_request]

jobs:
  semgrep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: .semgrep.yml
name: Semgrep Analysis

on: [push, pull_request]

jobs:
  semgrep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: .semgrep.yml

  job:
    container: returntocorp/ocaml:alpine-2024-01-18
    env:
      HOME: /root
    runs-on: ubuntu-latest
    steps:
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50

      - name: Checkout repository (alternative method)
        uses: actions/checkout@v2
        with:
          ref: main  # Specify a specific branch

      - name: Configure git safedir properly
        run: git config --global --add safe.directory $(pwd)

      - name: Set GHA cache for OPAM in ~/.opam
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-opam-deps-4.14.0-${{hashFiles('semgrep.opam')}}
          path: ~/.opam

      - name: Install dependencies (example step)
        run: |
          eval $(opam env)
          make install-deps-ALPINE-for-semgrep-core
          make install-deps-for-semgrep-core

      - name: Build semgrep-core
        run: opam exec -- make core

      - name: Make artifact for bin/semgrep-core
        run: |
          mkdir artifacts
          cp bin/semgrep-core artifacts/
          tar czf artifacts.tgz artifacts
        continue-on-error: true  # Example: continue even if this step fails

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-core-x86-artifact
          path: artifacts.tgz

      - name: Test semgrep-core
        run: opam exec -- make core-test

      - name: Deploy to production (example deployment step)
        if: github.ref == 'refs/heads/main'  # Example condition
        run: |
          echo "Deploying to production..."
          # Add deployment commands here

    name: build-test-core-x86
    on:
      workflow_call: null
      workflow_dispatch: null
